Token        Lexeme
-------------------------
keyword    Function
identifier primeChecker
separator  {
keyword    Integer
identifier num
separator  ,
identifier i
separator  ;
keyword    Boolean
identifier isPrime
separator  ;
keyword    Get
separator  (
identifier num
separator  )
separator  ;
identifier isPrime
operator   =
keyword    True
separator  ;
keyword    If
separator  (
identifier num
operator   <=
integer    1
separator  )
separator  {
identifier isPrime
operator   =
keyword    False
separator  ;
separator  }
keyword    Else
separator  {
identifier i
operator   =
integer    2
separator  ;
keyword    While
separator  (
identifier i
operator   <
identifier num
invalid    &
invalid    &
identifier isPrime
operator   ==
keyword    True
separator  )
separator  {
keyword    If
separator  (
identifier num
invalid    %
identifier i
operator   ==
integer    0
separator  )
separator  {
identifier isPrime
operator   =
keyword    False
separator  ;
separator  }
identifier i
operator   =
identifier i
operator   +
integer    1
separator  ;
separator  }
separator  }
keyword    If
separator  (
identifier isPrime
operator   ==
keyword    True
separator  )
separator  {
keyword    Put
separator  (
invalid    "
identifier Prime
invalid    "
separator  )
separator  ;
separator  }
keyword    Else
separator  {
keyword    Put
separator  (
invalid    "
identifier Not
identifier Prime
invalid    "
separator  )
separator  ;
separator  }
keyword    Return
separator  ;
separator  }
